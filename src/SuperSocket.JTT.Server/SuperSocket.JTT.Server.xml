<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SuperSocket.JTT.Server</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            依赖注入扩展方法
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddJTT(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SuperSocket.JTT.Server.Model.JTTGenOptions})">
            <summary>
            添加微信服务
            <para>单例模式</para>
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.ConfigureJTT(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{SuperSocket.JTT.Server.Model.JTTGenOptions})">
            <summary>
            配置微信服务
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
        </member>
        <member name="T:SuperSocket.JTT.Server.Application.ConfigureJTTProtocolOptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:SuperSocket.JTT.Server.Gen.IJTTProvider">
            <summary>
            JTT服务器构造器
            </summary>
        </member>
        <member name="M:SuperSocket.JTT.Server.Gen.IJTTProvider.GetJTTServerHostBuilder">
            <summary>
            获取JTT服务器
            </summary>
            <returns></returns>
        </member>
        <member name="M:SuperSocket.JTT.Server.Gen.IJTTProvider.GetJTTServer">
            <summary>
            获取JTT服务器
            </summary>
            <returns></returns>
        </member>
        <member name="T:SuperSocket.JTT.Server.Gen.JTTGenerator">
            <summary>
            微信服务生成器
            </summary>
        </member>
        <member name="M:SuperSocket.JTT.Server.Gen.JTTGenerator.#ctor(SuperSocket.JTT.Server.Model.JTTGenOptions)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:SuperSocket.JTT.Server.Model.JTTGenOptions">
            <summary>
            JTT配置
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTGenOptions.ServerOptions">
            <summary>
            服务器配置
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTGenOptions.LoggingOptions">
            <summary>
            日志配置
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTGenOptions.ProtocolOptions">
            <summary>
            协议配置
            </summary>
        </member>
        <member name="T:SuperSocket.JTT.Server.Model.JTTLoggingOptions">
            <summary>
            日志配置
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTLoggingOptions.Provider">
            <summary>
            日志构造器
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTLoggingOptions.AddConsole">
            <summary>
            添加控制台日志
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTLoggingOptions.AddDebug">
            <summary>
            添加调试日志
            </summary>
        </member>
        <member name="T:SuperSocket.JTT.Server.Model.JTTProtocolOptions">
            <summary>
            JTT协议配置
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTProtocolOptions.Version">
            <summary>
            JTT协议版本
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTProtocolOptions.JTTCustomAssemblyName">
            <summary>
            <para>使用自定义JTT协议时，必须手动指定以下文件所在的命名空间</para>
            <para><see cref="T:SuperSocket.JTT.Base.Interface.IJTTProtocol"/></para>
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTProtocolOptions.ConfigFilePath">
            <summary>
            Json配置文件路径
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTProtocolOptions.PipelineFilterFactory">
            <summary>
            生成流数据拦截器
            </summary>
            <remarks>为空时将会使用默认拦截器</remarks>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTProtocolOptions.Structures">
            <summary>
            独立配置结构集合
            </summary>
            <remarks>使用此属性可以避免把所有配置全写在一个Json文件中</remarks>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTProtocolOptions.DataMappings">
            <summary>
            独立配置数据映射集合
            </summary>
            <remarks>使用此属性可以避免把所有配置全写在一个Json文件中</remarks>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTProtocolOptions.InternalEntitysMappings">
            <summary>
            独立配置内部实体映射集合
            </summary>
            <remarks>使用此属性可以避免把所有配置全写在一个Json文件中</remarks>
        </member>
        <member name="T:SuperSocket.JTT.Server.Model.JTTServerOptions">
            <summary>
            服务器配置
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.Name">
            <summary>
            名称
            </summary>
            <remarks>默认 $"{JTTVersion} Server"</remarks>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.IP">
            <summary>
            IP
            </summary>
            <remarks>默认 Any</remarks>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.Port">
            <summary>
            端口
            </summary>
            <remarks>默认 4040</remarks>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.BackLog">
            <summary>
            日志备份数量
            </summary>
            <remarks>默认10000</remarks>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.UseUdp">
            <summary>
            使用Udp协议
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.PackageHandler">
            <summary>
            处理消息包
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.ErrorHandler">
            <summary>
            处理异常
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.OnConnected">
            <summary>
            已建立连接
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.OnClosed">
            <summary>
            连接已关闭
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.InProcSessionContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.ConfigureServices">
            <summary>
            配置服务
            </summary>
            <remarks>
            <para><see cref="T:SuperSocket.JTT.Base.Interface.IJTTProtocol"/>已注册为单例</para>
            </remarks>
        </member>
        <member name="P:SuperSocket.JTT.Server.Model.JTTServerOptions.ConfigureAppConfiguration">
            <summary>
            配置应用
            </summary>
        </member>
    </members>
</doc>
