/*
 * JTT协议配置文件示例模板
*/
{
  "JTT808": { //这里应该填写JTT协议的版本号 SuperSocket.JTTBase.Model.JTTVersion

    /* JTT协议配置信息 开始 */
    "BigEndian": true, //数据流是否遵循大端
    "ZHCNEncoding": "gbk", //汉子采用何种编码
    "Padding": { //定长字符的补位字符
      "Encode": { //应该以何种方式编码Value值
        "CodeType": "string_hex"
      },
      "Value": "0x00" //值
    },
    "CrcCcitt": { //CRC数据校验配置
      "Type": "16", //类型（位数） SuperSocket.JTTBase.Model.CrcLength
      "InitialValue": "NonZero1", //初始值 SuperSocket.JTTBase.Model.InitialCrcValue
      "IgnoreLength": { //需要跳过部分的长度
        "Front": 0, //前段
        "Posterior": 0 //后端
      },
      //取值长度（负数为跳过指定长度后再取剩下的值）
      //如果crc校验码位于流数据末端，则应该设置为负数
      "ValueLength": -2,
      "Property": "Crc_Code" //属性名称（PackageInfo中的属性）
    },
    "Encrypt": { //加密配置
      "M1": 1,
      "IA1": 2,
      "IC1": 3,
      "Targets": { //需要解密的结构
        "MessageBody": { //结构的Id
          "Flag": "MessageHeader.Encrypt_Flag", //加密标识属性名称（用该属性的值来判断是否需要解密）
          "Key": "MessageHeader.Encrtpt_Key" //秘钥属性名称（用该属性的值来获取用于解密的密钥）
        }
      }
    },
    "Escapes": [ //转义配置
      { //byte[] { 5b } 转为 byte[] { 5a, 01 }
        "Target": "0x5b",
        "Trans": [ "0x5a", "0x01" ], //必须为两字节
        "Encode": { //应该以何种方式编码Target值和Trans值
          "CodeType": "string_hex"
        }
      },
      {
        "Target": "0x5a",
        "Trans": [ "0x5a", "0x02" ],
        "Encode": {
          "CodeType": "string_hex"
        }
      },
      {
        "Target": "0x5d",
        "Trans": [ "0x5e", "0x01" ],
        "Encode": {
          "CodeType": "string_hex"
        }
      },
      {
        "Target": "0x5e",
        "Trans": [ "0x5e", "0x02" ],
        "Encode": {
          "CodeType": "string_hex"
        }
      }
    ],
    "DataMappings": { //数据映射集合
      "LoginResult": [ //示例 主链路登录应答返回验证结果
        {
          "Matching": "0x00", //匹配值
          "Value": "成功" //替换值
        },
        {
          "Matching": "0x01",
          "Value": "IP地址不正确"
        },
        {
          "Matching": "0x02",
          "Value": "接入码不正确"
        },
        {
          "Matching": "0x03",
          "Value": "用户没注册"
        },
        {
          "Matching": "0x04",
          "Value": "密码错误"
        },
        {
          "Matching": "0x05",
          "Value": "资源紧张，稍后再连接（已经占用）"
        },
        {
          "Matching": "0xff",
          "Value": "其他"
        }
      ]
    },
    "InternalEntitysMappings": { //内部结构映射实体集合
      "MessageHeaderEntity": { //映射标识
        "Assembly": "SuperSocket.JTT809", //命名空间
        "TypeName": "SuperSocket.JTT809.JTT809MessageHeader", //类名
        "Length": 30 //字节长度 为空时表示可变长度
      },
      "0x1001": {
        "Assembly": "SuperSocket.JTT809",
        "TypeName": "SuperSocket.JTT809.MessageBody.LoginRequestBody",
        "Length": 78
      },
      "0x1002": {
        "Assembly": "SuperSocket.JTT809",
        "TypeName": "SuperSocket.JTT809.MessageBody.LoginReplyBody",
        "Length": 5
      }
    },
    /* JTT协议配置信息 结束 */



    /* 消息包基础信息 开始 */
    "HeadFlag": { //头标识
      "Encode": { //应该以何种方式编码Value值
        "CodeType": "string_hex" //类型 SuperSocket.JTTBase.Model.CodeType
      },
      "Value": "0x5b"
    },
    "Structures": [ //消息包结构集合
      {
        "Id": "MessageHeader", //结构标识 默认为$"{Order}-{Property}-{Explain}"
        "IsHeader": true, //是否为消息头
        "Order": 1, //排序值
        "Property": "MessageHeader", //属性名称
        "Explain": "消息头", //说明
        "Length": 30,
        "StructureType": "internal", //结构类型 SuperSocket.JTTBase.Model.StructureType
        "InternalKey": null, //内部结构的标识 为空时直接默认为第一个
        "Internal": { //内部结构集合
          "MessageHeaderEntity": [
            {
              "Id": "MessageHeaderEntity-Msg_Length",
              "Order": 1,
              "Property": "Msg_Length",
              "Explain": "数据长度",
              "Length": 4,
              "Encode": { //数据的编码方式
                "CodeType": "uint32"
              }
            },
            {
              "Id": "MessageHeaderEntity-Msg_SN",
              "Order": 2,
              "Property": "Msg_SN",
              "Explain": "报文序列号",
              "Length": 4,
              "Encode": {
                "CodeType": "uint32"
              }
            },
            {
              "Id": "MessageHeaderEntity-Msg_ID",
              "Order": 3,
              "Property": "Msg_ID",
              "Explain": "协议号/业务数据类型",
              "Length": 2,
              "Encode": {
                "CodeType": "uint16"
              }
            },
            {
              "Id": "MessageHeaderEntity-Msg_GnsscenterID",
              "Order": 4,
              "Property": "Msg_GnsscenterID",
              "Explain": "下级平台接入码",
              "Length": 4,
              "Encode": {
                "CodeType": "uint32"
              }
            },
            {
              "Id": "MessageHeaderEntity-Version_Flag",
              "Order": 5,
              "Property": "Version_Flag",
              "Explain": "协议版本号标识",
              "Length": 3,
              "Encode": {
                "CodeType": "bytes"
              }
            },
            {
              "Id": "MessageHeaderEntity-Encrypt_Flag",
              "Order": 6,
              "Property": "Encrypt_Flag",
              "Explain": "报文加密标识位",
              "Length": 1,
              "Encode": {
                "CodeType": "boolean"
              }
            },
            {
              "Id": "MessageHeaderEntity-Encrtpt_Key",
              "Order": 7,
              "Property": "Encrtpt_Key",
              "Explain": "数据加密的密钥",
              "Length": 4,
              "Encode": {
                "CodeType": "uint32"
              }
            },
            {
              "Id": "MessageHeaderEntity-Time",
              "Order": 8,
              "Property": "Time",
              "Explain": "发送消息时的系统UTC时间",
              "Length": 8,
              "Encode": {
                "CodeType": "uint64"
              }
            }
          ]
        }
      },
      {
        "Id": "MessageBody",
        "IsBody": true,
        "Order": 2,
        "Property": "MessageBody",
        "Explain": "消息体",
        "StructureType": "internal",
        "InternalKey": {
          "Property": "MessageHeader.Msg_ID",
          "Encode": { //属性值是否需要先编码  执行顺序为先编码后解码
            "CodeType": "uint16_hex"
          },
          "Decode": { //属性值是否需要再解码
            "CodeType": "string_hex"
          }
        },
        "Internal": {
          "0x1001": [ //主链路登录请求消息数据体
            {
              "Id": "LoginRequestBodyEntity-UserID",
              "Order": 1,
              "Property": "UserID",
              "Explain": "用户Id",
              "Length": 4,
              "Encode": {
                "CodeType": "uint32"
              }
            },
            {
              "Id": "LoginRequestBodyEntity-Password",
              "Order": 2,
              "Property": "Password",
              "Explain": "密码",
              "Length": 8,
              "Encode": {
                "CodeType": "string"
              }
            },
            {
              "Id": "LoginRequestBodyEntity-Msg_GnsscenterID",
              "Order": 3,
              "Property": "Msg_GnsscenterID",
              "Explain": "下级平台接入码",
              "Length": 32,
              "Encode": {
                "CodeType": "uint32"
              }
            },
            {
              "Id": "LoginRequestBodyEntity-Down_link_IP",
              "Order": 4,
              "Property": "Down_link_IP",
              "Explain": "下级平台提供对应的从链路服务端IP地址",
              "Length": 32,
              "Encode": {
                "CodeType": "string"
              }
            },
            {
              "Id": "LoginRequestBodyEntity-Down_link_Port",
              "Order": 5,
              "Property": "Down_link_Port",
              "Explain": "下级平台提供对应的从链路服务端口号",
              "Length": 2,
              "Encode": {
                "CodeType": "uint16"
              }
            }
          ],
          "0x1002": [ //主链路登录应答消息数据体
            {
              "Id": "LoginRequestBodyEntity-Result",
              "Order": 1,
              "Property": "Result",
              "Explain": "验证结果",
              "Length": 1,
              "Encode": {
                "CodeType": "byte"
              },
              "DataMapping": { //数据映射配置
                "Key": "LoginResult", //数据映射标识
                "SetProperty": "Result_Mapping", //存储映射值的属性
                //使用解码后的值进行匹配,
                //默认 true
                //true 对使用SuperSocket.JTTBase.Model.StructureInfo.Encode配置解码后的值, 先使用Encode配置编码, 再使用Decode配置解码后进行匹配
                //false 对原始数据（流数据）, 使用Decode配置解码后进行匹配
                "UseDecodeValue": true,
                "Encode": { //是否需要编码后再进行匹配
                  "CodeType": "byte_hex"
                },
                "Decode": { //是否需要解码后再进行匹配
                  "CodeType": "string_hex"
                }
              }
            },
            {
              "Id": "LoginRequestBodyEntity-Verify_Code",
              "Order": 2,
              "Property": "Verify_Code",
              "Explain": "校验码",
              "Length": 4,
              "Encode": {
                "CodeType": "uint32"
              }
            }
          ]
        }
      }
    ],
    "EndFlag": { //尾标识
      "Encode": {
        "CodeType": "string_hex"
      },
      "Value": "0x5d"
    }
    /* 消息包结构信息 结束 */
  }
}
